{"version":3,"sources":["components/RealTimeChart.jsx","App.jsx","index.js"],"names":["RealTimeChart","title","time","value","useState","data","labels","datasets","label","fill","borderColor","backgroundColor","lineTension","options","scales","xAxes","type","realtime","onRefresh","chart","forEach","dataset","push","x","y","delay","duration","yAxes","ticks","min","max","width","height","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","App","awsConfig","Amplify","configure","Auth","userPoolId","cognitoUserPoolId","userPoolWebClientId","cognitoUserPoolClientId","identityPoolId","cognitoIdentityPoolId","region","addPluggable","AWSIoTProvider","aws_pubsub_region","aws_pubsub_endpoint","mqttBrokerEndpoint","fields","setFields","values","setValues","provider","setProvider","classes","useEffect","PubSub","subscribe","next","JSON","stringify","console","log","error","fallback","Grid","container","item","xs","Paper","className","map","idx","RealTimeChartWrap","Date","now","variant","square","React","memo","styled","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"glBA6DeA,EAzDO,SAAC,GAIO,IAHHC,EAGE,EAHFA,MACAC,EAEE,EAFFA,KACAC,EACE,EADFA,MACE,EACHC,mBAAS,IAEzBC,EAAO,CACTC,OAAQ,GACRC,SAAU,CAAC,CACPC,MAAOP,EACPQ,MAAM,EACNC,YAAa,0BACbC,gBAAiB,oBACjBC,YAAa,GACbP,KAXiB,uBAenBQ,EAAU,CACZC,OAAQ,CACJC,MAAO,CAAC,CACJC,KAAM,WACNC,SAAU,CACNC,UAAW,SAAUC,GACjBA,EAAMd,KAAKE,SAASa,SAAQ,SAAUC,GAClCA,EAAQhB,KAAKiB,KAAK,CACdC,EAAGrB,EACHsB,EAAGrB,QAIfsB,MAAO,IACPC,SAAU,OAGlBC,MAAO,CAAC,CACJC,MAAO,CACHC,IAAK,EACLC,IAAK,SAMrB,OACI,8BACI,cAAC,OAAD,CACIC,MAAO,IACPC,OAAQ,IACR3B,KAAMA,EACNQ,QAASA,OC7BzB,IAEMoB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQC,KAAKC,aAMlC,SAASC,IA/BT,IAAcC,IAiCLA,EAhCLC,UAAQC,UAAU,CACdC,KAAM,CACFC,WAAYJ,EAAUK,kBACtBC,oBAAqBN,EAAUO,wBAC/BC,eAAgBR,EAAUS,sBAC1BC,OAAQV,EAAUU,UAI1BT,UAAQU,aAAa,IAAIC,iBAAe,CACpCC,kBAAmBb,EAAUU,OAC7BI,oBAAoB,SAAD,OAAWd,EAAUe,mBAArB,YAmBZ,MAGiB1D,mBAAS,IAH1B,mBAGJ2D,EAHI,KAGIC,EAHJ,OAIiB5D,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAJvC,mBAIJ6D,EAJI,KAIIC,EAJJ,OAKqB9D,mBAAS,IAL9B,mBAKJ+D,EALI,KAKMC,EALN,KAMLC,EAAUpC,IAgBhB,OAdAqC,qBAAU,WACNC,IAAOC,UAAU,WAAY,CACzBL,SAAU,mBACXK,UAAU,CACTC,KAAM,SAACpE,GACH2D,EAAU3D,EAAKF,MAAM4D,QACrBG,EAAU7D,EAAKF,MAAM8D,QACrBG,EAAYM,KAAKC,UAAUtE,IAC3BuE,QAAQC,IAAIxE,IAEhByE,MAAO,SAACA,GAAD,OAAWF,QAAQC,IAAIC,SAKlC,cAAC,WAAD,CAAUC,SAAU,8CAApB,SACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACzC,QAAS,EAAzB,UACI,cAACwC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAOC,UAAWhB,EAAQ/B,MAA1B,6BAGAyB,EAAOuB,KAAI,SAACJ,EAAMK,GACd,MACc,cAATL,EAAwB,KACzB,cAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACK,EAAD,UACA,cAAC,EAAD,CACIvF,MAAOiF,EACP/E,MAAO8D,EAAOsB,GACdrF,KAAMuF,KAAKC,eAS/B,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAACC,EAAA,EAAD,CAAOC,UAAWhB,EAAQ/B,MAAOqD,QAAQ,WAAWC,QAAM,EAA1D,UACI,2DACA,kCAAKzB,EAAL,iBAQL0B,UAAMC,KAAKhD,GAEpB0C,EAAoBO,IAAOC,IAAV,kIChGvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc662559.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-streaming';\n\nconst RealTimeChart = ({\n                           title,\n                           time,\n                           value\n                       }) => {\n    const [ dataArray ] = useState([]);\n\n    const data = {\n        labels: [],\n        datasets: [{\n            label: title,\n            fill: false,\n            borderColor: 'rgba(255, 99, 132, 0.2)',\n            backgroundColor: 'rgb(255, 99, 132)',\n            lineTension: 0.1,\n            data: dataArray,\n        }]\n    }\n\n    const options = {\n        scales: {\n            xAxes: [{\n                type: 'realtime',\n                realtime: {\n                    onRefresh: function (chart) {\n                        chart.data.datasets.forEach(function (dataset) {\n                            dataset.data.push({\n                                x: time,\n                                y: value,\n                            });\n                        });\n                    },\n                    delay: 2000,\n                    duration: 20000,\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    min: 1,\n                    max: 1000,\n                }\n            }]\n        }\n    }\n\n    return(\n        <div>\n            <Line\n                width={350}\n                height={200}\n                data={data}\n                options={options}\n            />\n        </div>\n    );\n}\n\nexport default RealTimeChart;","import Amplify, {PubSub} from 'aws-amplify';\nimport {AWSIoTProvider} from '@aws-amplify/pubsub/lib/Providers';\nimport awsConfig from './awsConfig.json'\nimport React, {useEffect, useState, Suspense} from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport styled from \"styled-components\";\nimport RealTimeChart from './components/RealTimeChart';\n\nfunction init(awsConfig) {\n    Amplify.configure({\n        Auth: {\n            userPoolId: awsConfig.cognitoUserPoolId,\n            userPoolWebClientId: awsConfig.cognitoUserPoolClientId,\n            identityPoolId: awsConfig.cognitoIdentityPoolId,\n            region: awsConfig.region,\n        }\n    });\n\n    Amplify.addPluggable(new AWSIoTProvider({\n        aws_pubsub_region: awsConfig.region,\n        aws_pubsub_endpoint: `wss://${awsConfig.mqttBrokerEndpoint}/mqtt`,\n    }));\n}\n\nconst topic = 'app/test' //우리가 임의로 지정 할 수 있는 mqtt subscribe 토픽\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst getTime = (unixTimestamp) => new Date((unixTimestamp + 3600 * 9) * 1000) //for korean time\n\nfunction App() {\n\n    init(awsConfig);\n    const [fields, setFields] = useState([])\n    const [values, setValues] = useState([0, 0, 0, 0, 0])\n    const [provider, setProvider] = useState(\"\");\n    const classes = useStyles();\n\n    useEffect(() => {\n        PubSub.subscribe('app/test', {\n            provider: 'AWSIoTProvider'\n        }).subscribe({\n            next: (data) => {\n                setFields(data.value.fields);\n                setValues(data.value.values);\n                setProvider(JSON.stringify(data));\n                console.log(data);\n            },\n            error: (error) => console.log(error)\n        })\n    })\n\n    return (\n        <Suspense fallback={<div>Loading....</div>}>\n        <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <Paper className={classes.paper}> Hello world </Paper>\n            </Grid>\n            {\n                fields.map((item, idx) => {\n                    return(\n                        (item === \"timestamp\") ? null :\n                        <Grid item xs={4}>\n                            <RealTimeChartWrap>\n                            <RealTimeChart\n                                title={item}\n                                value={values[idx]}\n                                time={Date.now()}\n                            />\n                            </RealTimeChartWrap>\n                        </Grid>\n                    )\n                })\n            }\n\n\n            <Grid item xs={12}>\n                <Paper className={classes.paper} variant=\"outlined\" square>\n                    <p> This is provider context </p>\n                    <p> {provider} </p>\n                </Paper>\n            </Grid>\n        </Grid>\n        </Suspense>\n    );\n}\n\nexport default React.memo(App);\n\nconst RealTimeChartWrap = styled.div`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}